AWSTemplateFormatVersion: '2010-09-09'
Description: Part 1 - Build a webapp stack with CloudFormation

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC where you want to deploy the resources

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the subnet where you want to deploy the instance

  ImageId:
    Type: String
    Description: The ID of the AMI to use for the instance

  KeyName:
    Type: String
    Description: The name of the key pair to use for the instance

  InstanceType:
    Type: String
    Description: The instance type to use for the instance
  
  AwsRegion:
    Type: String
    Description: Enter Region
Resources:
  WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: WebAppInstance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install -y docker.io
          systemctl start docker
          systemctl enable docker
          
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - '-'
        - - webapp-security-group
          - dev
      GroupDescription: Allow HTTP/HTTPS and SSH inbound and outbound traffic
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  WebsiteURL:
    Value: !Sub http://${WebAppInstance.PublicDnsName}
    Description: WebApp URL
