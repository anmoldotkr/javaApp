pipeline {
    agent any
    environment {
        AWS_SESSION_TOKEN = credentials('session-token')
    }
    parameters {
        string(name: 'InstanceType', description: 'Enter your Instance type')
        string(name: 'ImageId', description: 'Enter ami image')
        string(name: 'KeyName', description: 'Enter your .pem key Name')
        string(name: 'AwsRegion', description: 'Enter your .pem key Name')
        string(name: 'ENVIRONMENT', description: 'Enter the environment (dev, stage, testing)')
        string(name: 'PRODUCT', description: 'Enter the product name (default: Training)')
        string(name: 'SERVICE', description: 'Enter the service name (default: EC2)')
    }
    stages {
        stage('Creating ec2 inside the vpc') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    script {
                        sh """
                            aws cloudformation deploy \
                            --stack-name ${params.ENVIRONMENT}-${params.PRODUCT}-${params.SERVICE} \
                            --template-file ./ec2.yml \
                            --parameter-overrides \
                            InstanceType=${params.InstanceType} \
                            ImageId=${params.ImageId} \
                            KeyName=${params.KeyName} \
                            --region ${params.AwsRegion} \

                        """
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed. Please check the logs for details.'
        }
        always {
            cleanWs()
        }
    }
}
