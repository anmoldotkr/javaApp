pipeline {
    agent any
    parameters {
        string(name: 'Instance_ID', description: 'Enter your EC2 instance ID')
        string(name: 'DOCKER_IMAGE', description: 'Enter the Docker image to pull')
    }
    stages {
        stage('Get EC2 Public IP') {
            steps {
                script {
                    def ec2Ip = sh(
                        script: "aws ec2 describe-instances --instance-ids ${params.Instance_ID} --region ${env.AWS_REGION} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text",
                        returnStdout: true
                    ).trim()
                    env.EC2_IP = ec2Ip
                }
            }
        }

        stage('SSH to EC2 and Run Docker Container') {
            steps {
                script {
                    // Use sshagent to handle SSH key
                    sshagent(['test-ec2-ssh-key']) {
                        // Create an SSH command to execute the required commands on the EC2 instance
                        sh "ssh -o StrictHostKeyChecking=no -t ubuntu@${env.EC2_IP} sudo docker pull ${params.DOCKER_IMAGE}"
                        sh "ssh -o StrictHostKeyChecking=no -t ubuntu@${env.EC2_IP} sudo docker run -d -p 8081:8081 ${params.DOCKER_IMAGE}"
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Docker container started successfully!'
        }
        failure {
            echo 'Failed to start Docker container. Please check the logs for details.'
        }
        always {
            cleanWs()
        }
    }
}
